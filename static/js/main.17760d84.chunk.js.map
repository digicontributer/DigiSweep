{"version":3,"sources":["components/Dialogs/confirmDialog.js","components/Modals/derivitorStatus.js","components/Dialogs/errorDialog.js","components/StepOne/index.js","components/StepTwo/style.js","components/StepTwo/index.js","components/StepThree/index.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["address","amount","cancelDialog","confirmDialog","dialogOpen","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","closeModal","derivitorStatus","gapLimit","progressModalOpen","Modal","style","top","left","transform","position","background","width","Table","TableHead","TableRow","TableCell","TableBody","map","i","key","name","status","closeDialog","error","wif","selectedServer","startSearch","updateGapLimit","updateSelectedServer","updateWif","Card","CardContent","Typography","className","gutterBottom","variant","TextField","value","onChange","label","type","margin","multiline","rowsMax","rows","accept","multiple","htmlFor","component","display","justifyContent","FormControl","flexBasis","InputLabel","shrink","Select","input","Input","fullWidth","displayEmpty","MenuItem","exportButton","marginTop","addressError","currentUnit","dgbAddress","getBalance","sendBackup","updateAddress","wallet","json","w","obj","funds","addrs","filter","addr","hasBalance","balance","utxos","reduce","a","b","main","privateKey","toAddress","toString","legacyAddress","toLegacyAddress","toWIF","totalBalance","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","iterator","o","idx","required","disabled","txid","GAP_ADDRESSES_LIMIT","fetchUtxos","fetch","then","res","derivitors","path","secret","App","props","state","stepTwo","stepThree","passwordDialog","usdRate","gapStatus","bind","reset","resp","code","setState","rate","this","toFixed","e","DigiByte","Address","isValid","Promise","resolve","reject","length","privateKeys","replace","split","Mnemonic","join","isSeed","privKeys","substr","testPrivateKey","privKey","resolve2","reject2","splitKey","bip38","decrypt","newPriv","PrivateKey","Error","all","results","d","seed","promises","forEach","derivitor","push","len","mnemonic","hdKey","HDPrivateKey","fromSeed","toSeed","derive","changeAddr","change","spread","mainUtxos","mainLegacyUtxos","changeUtxos","changeLegacyUtxos","newGap","mainBalance","mainLegacyBalance","changeBalance","changeLegacyBalance","updateDerivitorStatus","getNextKey","server","getNextAddress","wallets","some","getDataFromSeed","concat","apply","legacyUtxos","xprv","getNextXprvAddress","getDataFromXprv","checkInput","getDataFromKeys","catch","err","message","tx","Transaction","utxo","from","to","Unit","fromDGB","toSatoshis","fee","p","sign","rawTx","data","method","headers","broadcastTransaction","serialize","paddingRight","cursor","userSelect","StepThree","StepOne","StepTwo","bal","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"mfAWe,cAAyE,IAA7DA,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WACvE,OACE,kBAACC,EAAA,EAAD,CACEC,KAAMF,EACNG,QAASL,EACTM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,WACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAAtB,+CAC8C,2BAAIV,EAAJ,OAD9C,uBACoF,2BAAID,KAG1F,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASd,EAAce,MAAM,UAAUC,WAAS,GAAxD,UAGA,kBAACH,EAAA,EAAD,CAAQC,QAASb,EAAec,MAAM,UAAUC,WAAS,GAAzD,W,sDClBO,cAAyE,IAA7DC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,kBAChE,OACE,kBAACC,EAAA,EAAD,CACEf,kBAAgB,qBAChBC,mBAAiB,2BACjBH,KAAMgB,EACNf,QAASY,GAET,yBAAKK,MAAO,CAAEC,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBAAyBC,SAAU,WAAYC,WAAY,QAASC,MAAO,SAC3H,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,iBAKJ,kBAACC,EAAA,EAAD,KACIf,EAAgBgB,IAAI,SAAAC,GACpB,OACE,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAEE,MACf,kBAACL,EAAA,EAAD,KACGG,EAAEE,MAEL,kBAACL,EAAA,EAAD,SACIG,EAAEG,OADN,IACenB,EADf,aC5BH,cAA+C,IAAnCoB,EAAkC,EAAlCA,YAAarC,EAAqB,EAArBA,WAAYsC,EAAS,EAATA,MAClD,OACE,kBAACrC,EAAA,EAAD,CACEC,KAAMF,EACNG,QAASkC,EACTjC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,UACtC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACnB+B,IAGL,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASyB,EAAaxB,MAAM,UAAUC,WAAS,GAAvD,W,iFCXO,cAA4G,IAAhGyB,EAA+F,EAA/FA,IAAKtB,EAA0F,EAA1FA,SAAUuB,EAAgF,EAAhFA,eAAgBC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,qBAAsBC,EAAa,EAAbA,UAC3G,OACE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,aAAanC,MAAM,cAAcoC,cAAY,EAACC,QAAQ,MAA5E,kBAGA,yUACA,0BAAMF,UAAU,cACd,kBAACG,EAAA,EAAD,CACEC,MAAOb,EACPc,SAAUT,EACVrC,GAAG,uBACH+C,MAAM,iDACNN,UAAU,YACVO,KAAK,OACLC,OAAO,SACPN,QAAQ,WACRO,WAAS,EACTC,QAAQ,IACRC,KAAK,MAEP,6BACE,2BACEC,OAAO,UACPZ,UAAU,cACVzC,GAAG,wBACHsD,UAAQ,EACRN,KAAK,SAEP,2BAAOO,QAAQ,yBACb,kBAACnD,EAAA,EAAD,CAAQuC,QAAQ,YAAYa,UAAU,OAAOf,UAAU,gBAAvD,oBAKJ,yBAAK5B,MAAO,CAAEM,MAAO,OAAQsC,QAAS,OAAQC,eAAgB,gBAAiBT,OAAQ,QACrF,kBAACU,EAAA,EAAD,CAAalB,UAAU,cAAc5B,MAAO,CAAE+C,UAAW,QACvD,kBAACC,EAAA,EAAD,CAAYC,QAAM,EAACP,QAAQ,4BAA3B,UAGA,kBAACQ,EAAA,EAAD,CACElB,MAAOZ,EACPa,SAAUV,EACV4B,MAAO,kBAACC,EAAA,EAAD,CAAOrC,KAAK,SAASsC,WAAS,EAAClE,GAAG,6BACzCmE,cAAY,EACZD,WAAS,EACTtC,KAAK,UAEL,kBAACwC,EAAA,EAAD,CAAUvB,MAAO,6BAAjB,qBACA,kBAACuB,EAAA,EAAD,CAAUvB,MAAO,4CAAjB,sCAGJ,kBAACc,EAAA,EAAD,CAAalB,UAAU,cAAc5B,MAAO,CAAE+C,UAAW,QACvD,kBAACC,EAAA,EAAD,CAAYC,QAAM,EAACP,QAAQ,8BAA3B,aAGA,kBAACQ,EAAA,EAAD,CACElB,MAAOnC,EACPoC,SAAUX,EACV6B,MAAO,kBAACC,EAAA,EAAD,CAAOrC,KAAK,WAAW5B,GAAG,+BACjCmE,cAAY,EACZvC,KAAK,aAEL,kBAACwC,EAAA,EAAD,CAAUvB,MAAO,IAAjB,MACA,kBAACuB,EAAA,EAAD,CAAUvB,MAAO,IAAjB,MACA,kBAACuB,EAAA,EAAD,CAAUvB,MAAO,KAAjB,OACA,kBAACuB,EAAA,EAAD,CAAUvB,MAAO,KAAjB,OACA,kBAACuB,EAAA,EAAD,CAAUvB,MAAO,KAAjB,YAKR,kBAACzC,EAAA,EAAD,CAAQuC,QAAQ,YAAYrC,MAAM,UAAUmC,UAAU,eAAepC,QAAS6B,GAA9E,uBCvFS,GACbmC,aAAc,CACZC,UAAW,MACXV,UAAW,QCaA,cAAqG,IAAzFW,EAAwF,EAAxFA,aAAcC,EAA0E,EAA1EA,YAAaC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,OA0CvG,OACE,kBAACvC,EAAA,EAAD,CAAMzB,MAAO,CAAEyD,UAAW,SAC1B,kBAAC/B,EAAA,EAAD,KACE,yBAAK1B,MAAO,CAAE4C,QAAS,SACrB,kBAACjB,EAAA,EAAD,CAAYC,UAAU,aAAanC,MAAM,cAAcoC,cAAY,EAACC,QAAQ,KAAK9B,MAAO,CAAE+C,UAAW,QAArG,gBAGA,kBAACxD,EAAA,EAAD,CAAQuC,QAAQ,YAAYrC,MAAM,UAAUO,MAAOA,EAAMwD,aAAchE,QAhDxD,WACnB,IAEMyE,EAAOD,EAAOpD,IAAI,SAAAsD,GACtB,IAAMC,EAAM,CACVpD,KAAMmD,EAAEnD,MAoBV,MAlBe,YAAXmD,EAAE/B,KACJgC,EAAIC,MAAQF,EAAEG,MAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKC,aAAY5D,IAAI,SAAA2D,GACtD,MAAO,CACLE,QAASF,EAAKG,MAAMJ,OAAO,SAAAzD,GAAC,OAAIA,EAAEpC,SAAQmC,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,GAAM,GAClGrG,QAAS+F,EAAKO,KAAKC,WAAWC,YAAYC,WAC1CC,cAAeX,EAAKO,KAAKC,WAAWI,kBAAkBF,WACtDF,WAAYR,EAAKO,KAAKC,WAAWK,YAIrCjB,EAAIpD,KAAO,aACXoD,EAAIC,MAAQ,CACVK,QAASP,EAAEmB,aACX7G,QAAS0F,EAAEY,KAAKE,YAAYC,WAC5BC,cAAehB,EAAEY,KAAKK,kBAAkBF,WACxCF,WAAYb,EAAEY,KAAKM,UAGhBjB,IAET,GAAImB,OAAOC,WAAaD,OAAOC,UAAUC,iBAAkB,CACzD,IAAIC,EAAO,IAAIC,KAAK,CAACC,mBAAmBC,UAAUC,KAAKC,UAAU7B,EAAM,KAAM,MAAO,CAAE9B,KA1BpE,oCA2BlBoD,UAAUC,iBAAiBC,EA5BZ,mBA6BV,CACL,IAAIb,EAAImB,SAASC,cAAc,KAC/BpB,EAAEqB,SA/Ba,cAgCfrB,EAAEsB,KAAO,wCAA8BC,mBAAmBN,KAAKC,UAAU7B,EAAM,KAAM,IACrFW,EAAEwB,OAAS,SACXL,SAASM,KAAKC,YAAY1B,GAC1BA,EAAE2B,QACFR,SAASM,KAAKG,YAAY5B,MAWxB,WAIF,kDAAuB,2BAAKf,EAAWG,EAAOpD,IAAI,SAAAC,GAAC,OAAIA,EAAEwE,eAAcV,OAAO,SAACC,EAAEC,GAAH,OAASD,EAAGC,KAAnE,IAA0ElB,GAAjG,mHACE,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aAGA,kBAACA,EAAA,EAAD,gBAGA,kBAACA,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,iBAKJ,kBAACC,EAAA,EAAD,KACIqD,EAAOM,OAAO,SAAAzD,GAAC,OAAIA,EAAEwE,eAAczE,IAAI,SAACC,EAAG4F,GAC3C,MAAe,YAAX5F,EAAEsB,KACGtB,EAAEwD,MAAMC,OAAO,SAAAoC,GAAC,OAAIA,EAAElC,aAAY5D,IAAI,SAAC8F,EAAGC,GAC/C,OACE,kBAAClG,EAAA,EAAD,CAAUK,IAAK6F,GACb,kBAACjG,EAAA,EAAD,cAGA,kBAACA,EAAA,EAAD,KACGgG,EAAE5B,KAAKC,WAAWI,kBAAkBF,YAEvC,kBAACvE,EAAA,EAAD,KACGmD,EAAW6C,EAAEjC,SADhB,IAC2Bd,GAE3B,kBAACjD,EAAA,EAAD,KACGG,EAAEE,SAKS,YAAXF,EAAEsB,KACJtB,EAAE6D,MAAM9D,IAAI,SAAC8F,EAAGC,GACrB,OACE,kBAAClG,EAAA,EAAD,CAAUK,IAAK6F,GACb,kBAACjG,EAAA,EAAD,cAGA,kBAACA,EAAA,EAAD,KACGgG,EAAElI,SAEL,kBAACkC,EAAA,EAAD,KACGmD,EAAW6C,EAAEjI,QADhB,IAC0BkF,GAE1B,kBAACjD,EAAA,EAAD,uBAOE,kBAACD,EAAA,EAAD,CAAUK,IAAK2F,QAK/B,kBAAC1E,EAAA,EAAD,CACE6E,UAAQ,EACRvD,WAAS,EACTnC,MAAOwC,EACPzB,SAAU8B,EACV7B,MAAM,yBACNF,MAAO4B,EACPxB,OAAO,WAEX,kBAAC7C,EAAA,EAAD,CAAQuC,QAAQ,YAAYrC,MAAM,UAAUmC,UAAU,eAAepC,QAASsE,EAAY+C,SAAUnD,GAApG,+BCvIS,cAAoB,IAARoD,EAAO,EAAPA,KACzB,OACE,kBAACrF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,aAAanC,MAAM,cAAcoC,cAAY,EAACC,QAAQ,MAA5E,qBAGA,qCAAU,uBAAGoE,KAAI,uCAAkCY,IAASA,OCVvDC,EAAsB,GAEtBC,EAAa,SAACzC,GACzB,OAAO0C,MAAM,sCAAD,OAAuC1C,EAAvC,UACT2C,KAAK,SAAAC,GAAG,OAAIA,EAAIlD,UAqBRmD,EAAa,CAAC,CACzBC,KAAK,MACLC,OA5B2B,gBA6B3BvG,KAAM,cACNsD,MAAO,IACN,CACDgD,KAAK,cACLC,OAlC0B,eAmC1BvG,KAAM,cACNsD,MAAO,IACN,CACDgD,KAAK,cACLC,OAvC0B,eAwC1BvG,KAAM,oBACNsD,MAAO,IACN,CACDgD,KAAK,eACLC,OA5C0B,eA6C1BvG,KAAM,gBACNsD,MAAO,K,WC0WMkD,E,YAzYb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACX5H,SAAUkH,EACVpD,YAAa,MACbxC,IAAK,GACL2F,KAAM,KACNlD,WAAY,GACZF,cAAc,EACdM,OAAQ,GACR5C,eAAgB,4BAChBsG,SAAS,EACTC,WAAW,EACXhJ,eAAe,EACfC,YAAY,EACZkB,mBAAmB,EACnBoB,MAAO,KACP0G,gBAAgB,EAChBhI,gBAAiBwH,EAAWxG,IAAI,SAAAC,GAC9B,MAAO,CAAEE,KAAMF,EAAEE,KAAMC,OAAQ,KAEjC6G,QAAS,GAEX,EAAKJ,MAAMK,UAAY,EAAKL,MAAM5H,SAClC,EAAKwB,YAAc,EAAKA,YAAY0G,KAAjB,gBACnB,EAAKjE,WAAa,EAAKA,WAAWiE,KAAhB,gBAClB,EAAKhE,cAAgB,EAAKA,cAAcgE,KAAnB,gBACrB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBA3BG,E,iFA8BG,IAAD,ODnCbd,MAAM,iCACVC,KAAK,SAAAC,GAAG,OAAIA,EAAIlD,SCmCJiD,KAAK,SAAAe,GAChB,IAAMJ,EAAUI,EAAK3D,OAAO,SAAAzD,GAAC,MAAe,QAAXA,EAAEqH,OAAgB,GACnD,EAAKC,SAAS,CAAEN,QAASA,EAAQO,W,iCAI1B3D,GACT,MAA+B,QAA3B4D,KAAKZ,MAAM9D,aACLc,EAAU4D,KAAKZ,MAAMI,SAASS,QAAQ,GAEzC7D,I,oCAGK8D,GACRC,IAASC,QAAQC,QAAQH,EAAEnC,OAAOpE,OACpCqG,KAAKF,SAAS,CAAEzE,cAAc,IAE9B2E,KAAKF,SAAS,CAAEzE,cAAc,IAEhC2E,KAAKF,SAAS,CAAEvE,WAAY2E,EAAEnC,OAAOpE,U,mCAGzB,IAAD,OACX,OAAO,IAAI2G,IAAQ,SAACC,EAASC,GAAY,IAC/B1H,EAAQ,EAAKsG,MAAbtG,IACR,IAAKA,EAAI2H,OACP,OAAOF,EAAQ,EAAKT,SAAS,CAAEvJ,YAAY,EAAMsC,MAAO,wBAE1D,IAAM6H,EAAc5H,EAAI6H,QAAQ,MAAM,KAAKC,MAAM,KACjD,GD1BC,SAAgBF,GACrB,SAAKA,EAAYD,OAAS,IAAM,GAAOC,EAAYD,OAAS,IAAQC,EAAYD,OAAS,IACnFC,EAAY,GAAGD,OAAO,IACrBI,IAASR,QAAQK,EAAYI,KAAK,OCuBjCC,CAAOL,GACT,OAAOH,EAAQ,CAAES,SAAUN,EAAa5G,KAAM,SAGhD,GAA4B,IAAvB4G,EAAYD,QAAiD,SAA/BC,EAAY,GAAGO,OAAO,EAAE,GACzD,OAAOV,EAAQ,CAAES,SAAUN,EAAa5G,KAAM,SAGhD,IAAMoH,EAAiBpI,EAAI8H,MAAM,KAAKrI,IAAI,SAAA4I,GACxC,OAAO,IAAIb,IAAQ,SAACc,EAAUC,GAC5B,IAAIC,EAAWH,EAAQP,MAAM,KAC7B,GAAgC,OAA5BU,EAAS,GAAGL,OAAO,EAAE,GAAa,CACpC,IAAMnC,EAAMyC,IAAMC,QAAQF,EAAS,GAAIA,EAAS,IAC5CG,EAAUtB,IAASuB,WAAW5C,EAAIpC,YAAYK,QAClD,IAAIoD,IAASuB,WAAWrB,QAAQoB,GAC9B,OAAOjB,EAAO,IAAImB,MAAJ,+BAAkCF,KAEhDL,EAASK,OAEN,CACL,IAAItB,IAASuB,WAAWrB,QAAQc,GAC9B,OAAOX,EAAO,IAAImB,MAAJ,+BAAkCR,KAEhDC,EAASD,QAKjB,OAAOb,IAAQsB,IAAIV,GAAgBrC,KAAK,SAAAgD,GAAO,OAAItB,EAAQ,CAAES,SAAUa,EAAS/H,KAAM,mB,4CAIpEpB,EAAMC,GAAS,IAAD,OAClC,OAAO,IAAI2H,IAAQ,SAAAC,GACjB,IAAMuB,EAAI,EAAK1C,MAAM7H,gBAAgBgB,IAAI,SAAAC,GAIvC,OAHIA,EAAEE,OAASA,IACbF,EAAEG,OAAUA,EAAS,GAEhBH,IAET,EAAKsH,SAAS,CAAEvI,gBAAiBuK,GAAKvB,S,qCAI3BwB,GAAO,IAAD,OACnBA,EAAOA,EAAKjB,KAAK,KACjB,IAAMkB,EAAW,GAsCjB,OArCAjD,EAAW9C,OAAO,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,OAAO,SAAAzD,GAAC,OAAKA,EAAE2D,aAAYsE,OAAS,EAAKrB,MAAM5H,WAAUyK,QAAQ,SAAAC,GAmC9FF,EAASG,KAlCU,WACjB,IAAMC,EAAMF,EAAUlG,MAAMyE,OACtB4B,EAAW,IAAIxB,IAASkB,GACxBO,EAAQnC,IAASoC,aAAaC,SAASH,EAASI,SAAU,UAAWP,EAAUjD,QAC/E/C,EAAOoG,EAAMI,OAAN,UAAgBR,EAAUlD,KAA1B,YAAkCkD,EAAUlG,MAAMyE,OAAlD,OACPkC,EAAcL,EAAMI,OAAN,UAAgBR,EAAUlD,KAA1B,YAAkCkD,EAAUlG,MAAMyE,OAAlD,OAEpB,OADAyB,EAAUlG,MAAMoG,GAAO,CAAE3F,KAAMP,EAAM0G,OAAQD,GACtCrC,IAAQsB,IAAI,CACjBjD,EAAWzC,EAAKQ,WAAWC,YAAYC,YACvC+B,EAAWzC,EAAKQ,WAAWI,kBAAkBF,YAC7C+B,EAAWgE,EAAWjG,WAAWC,YAAYC,YAC7C+B,EAAWgE,EAAWjG,WAAWI,kBAAkBF,cAEpDiG,OAAO,SAACC,EAAWC,EAAiBC,EAAaC,GAChD,GAAGH,EAAUrC,QAAUsC,EAAgBtC,QAAUuC,EAAYvC,QAAUwC,EAAkBxC,OAAQ,CAC/F,IAAIyC,EAAS,EAAK9D,MAAMK,UACxB,EAAKK,SAAS,CAAEL,UAAWyD,GAAU,IACrChB,EAAUlG,MAAMoG,GAAKjG,YAAa,EAWpC,OATA+F,EAAUlG,MAAMoG,GAAKU,UAAYA,EACjCZ,EAAUlG,MAAMoG,GAAKW,gBAAkBA,EACvCb,EAAUlG,MAAMoG,GAAKY,YAAcA,EACnCd,EAAUlG,MAAMoG,GAAKa,kBAAoBA,EACzCf,EAAUlG,MAAMoG,GAAKe,YAAcL,EAAUrC,OAASqC,EAAUvK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAS,OAAOD,EAAKC,IAAO,EAC1H0F,EAAUlG,MAAMoG,GAAKgB,kBAAoBL,EAAgBtC,OAASsC,EAAgBxK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EAC3I0F,EAAUlG,MAAMoG,GAAKiB,cAAgBL,EAAYvC,OAASuC,EAAYzK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EAC/H0F,EAAUlG,MAAMoG,GAAKkB,oBAAsBL,EAAkBxC,OAASwC,EAAkB1K,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EACjJ0F,EAAUlG,MAAMoG,GAAKhG,QAAW8F,EAAUlG,MAAMoG,GAAKkB,oBAAsBpB,EAAUlG,MAAMoG,GAAKiB,cAAgBnB,EAAUlG,MAAMoG,GAAKgB,kBAAoBlB,EAAUlG,MAAMoG,GAAKe,YACvK,EAAKI,sBAAsBrB,EAAUxJ,KAAM0J,KAEnDvD,KAAK,WACJ,OAAOqD,IAGGsB,MAETlD,IAAQsB,IAAII,K,sCAGLD,EAAM0B,GAAS,IAAD,OAC5B,OAAO,IAAInD,IAAQ,SAACC,EAASC,GAC3B,OAAO,EAAKkD,eAAe3B,GAAMlD,KAAK,SAAA8E,GACpC,OAAGA,EAAQC,KAAK,SAAApL,GAAC,OAAIA,EAAEwD,MAAMyE,OAAS,EAAKrB,MAAM5H,YAAamM,EAAQ1H,OAAO,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,OAAO,SAAAzD,GAAC,OAAKA,EAAE2D,aAAYsE,OAAS,EAAKrB,MAAM5H,WAAUiJ,OAC1I,EAAKoD,gBAAgB9B,GAEvB4B,IAER9E,KAAK,SAAAlD,GAYJ,GAXAA,EAAOsG,QAAQ,SAAApG,GACbA,EAAE/B,KAAO,OACT+B,EAAEG,MAAMzD,IAAI,SAAAgE,GAEV,OADAA,EAAEF,MAAQ,GAAGyH,OAAOC,MAAM,GAAI,CAACxH,EAAEuG,UAAWvG,EAAEwG,gBAAiBxG,EAAEyG,YAAazG,EAAE0G,oBACzE1G,IAETV,EAAEmB,aAAenB,EAAEG,MAAMzD,IAAI,SAAAgE,GAAC,OAAIA,EAAEF,MAAM9D,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GACtE,OAAOD,EAAKC,GACX,KAAIF,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAGC,OAEVb,EAAOM,OAAO,SAAAJ,GAAC,OAAIA,EAAEmB,eAAcyD,OAEpD,OAAO,EAAKX,SAAS,CAAErI,mBAAmB,EAAOlB,YAAY,EAAMsC,MAAO,oBAE5E,EAAKiH,SAAS,CAAEnE,SAAQ0D,SAAS,EAAM5H,mBAAmB,U,sCAKhDuJ,GAAW,IAAD,OACxB,OAAOV,IAAQ/H,IAAIyI,EAAU,SAAAvI,GAC3B,IAAM4F,EAAI,CAAE5B,KAAM,IAAI0D,IAASuB,WAAWjJ,IAC1C,OAAO6H,IAAQsB,IAAI,CACjBjD,EAAWN,EAAE5B,KAAKE,YAAYC,YAC9B+B,EAAWN,EAAE5B,KAAKK,kBAAkBF,cAEnCiG,OAAO,SAACC,EAAWkB,GAKlB,OAJA3F,EAAEhC,MAAQ,GAAGyH,OAAOhB,EAAWkB,GAC/B3F,EAAElC,WAAakC,EAAEhC,MAAMuH,KAAK,SAAApL,GAAC,OAAIA,EAAEpC,SACnCiI,EAAErB,aAAeqB,EAAEhC,MAAM9D,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAGC,IAChE6B,EAAEvE,KAAO,UACFuE,MAGZQ,KAAK,SAAAlD,GACJ,OAAO,EAAKmE,SAAS,CAAEnE,SAAQ0D,SAAS,Q,yCAIzB4E,EAAM/B,GAAY,IAAD,OAE5BE,EAAMF,EAAUlG,MAAMyE,OACtB6B,EAAQnC,IAASoC,aAAa0B,GAC9B/H,EAAOoG,EAAMI,OAAN,UAHH,QAGG,cAA0BN,EAA1B,MACPO,EAAcL,EAAMI,OAAN,UAJV,QAIU,cAA0BN,IAE9C,OADAF,EAAUlG,MAAMoG,GAAO,CAAE3F,KAAMP,EAAM0G,OAAQD,GACtCrC,IAAQsB,IAAI,CACjBjD,EAAWzC,EAAKQ,WAAWC,YAAYC,YACvC+B,EAAWzC,EAAKQ,WAAWI,kBAAkBF,YAC7C+B,EAAWgE,EAAWjG,WAAWC,YAAYC,YAC7C+B,EAAWgE,EAAWjG,WAAWI,kBAAkBF,cAEpDiG,OAAO,SAACC,EAAWC,EAAiBC,EAAaC,GAChD,GAAGH,EAAUrC,QAAUsC,EAAgBtC,QAAUuC,EAAYvC,QAAUwC,EAAkBxC,OAAQ,CAC/F,IAAIyC,EAAS,EAAK9D,MAAMK,UACxB,EAAKK,SAAS,CAAEL,UAAWyD,GAAU,IACrChB,EAAUlG,MAAMoG,GAAKjG,YAAa,EAWpC,OATA+F,EAAUlG,MAAMoG,GAAKU,UAAYA,EACjCZ,EAAUlG,MAAMoG,GAAKW,gBAAkBA,EACvCb,EAAUlG,MAAMoG,GAAKY,YAAcA,EACnCd,EAAUlG,MAAMoG,GAAKa,kBAAoBA,EACzCf,EAAUlG,MAAMoG,GAAKe,YAAcL,EAAUrC,OAASqC,EAAUvK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAS,OAAOD,EAAKC,IAAO,EAC1H0F,EAAUlG,MAAMoG,GAAKgB,kBAAoBL,EAAgBtC,OAASsC,EAAgBxK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EAC3I0F,EAAUlG,MAAMoG,GAAKiB,cAAgBL,EAAYvC,OAASuC,EAAYzK,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EAC/H0F,EAAUlG,MAAMoG,GAAKkB,oBAAsBL,EAAkBxC,OAASwC,EAAkB1K,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAKC,IAAO,EACjJ0F,EAAUlG,MAAMoG,GAAKhG,QAAW8F,EAAUlG,MAAMoG,GAAKkB,oBAAsBpB,EAAUlG,MAAMoG,GAAKiB,cAAgBnB,EAAUlG,MAAMoG,GAAKgB,kBAAoBlB,EAAUlG,MAAMoG,GAAKe,YACvK,EAAKI,sBAAsBrB,EAAUxJ,KAAM0J,KAEnDvD,KAAK,WACJ,OAAOqD,M,sCAIK+B,EAAMtI,GAAS,IAAD,OACtBuG,EAAYvG,GAAkB,CAAEK,MAAO,GAAItD,KAAM,iBACvD,OAAOsH,KAAKkE,mBAAmBD,EAAK,GAAI/B,GAAWrD,KAAK,SAAA8E,GACtD,OAAGA,EAAQ3H,MAAMyE,OAAS,EAAKrB,MAAM5H,UAAYmM,EAAQ3H,MAAMC,OAAO,SAAAzD,GAAC,OAAKA,EAAE2D,aAAYsE,OAAS,EAAKrB,MAAM5H,SACrG,EAAK2M,gBAAgBF,EAAMN,GAE7BA,IAER9E,KAAK,SAAA8E,GACJ,GAAGA,EAAS,CASV,GARAA,EAAQ7J,KAAO,OACf6J,EAAQ3H,MAAMzD,IAAI,SAAAgE,GAEhB,OADAA,EAAEF,MAAQ,GAAGyH,OAAOC,MAAM,GAAI,CAACxH,EAAEuG,UAAWvG,EAAEwG,gBAAiBxG,EAAEyG,YAAazG,EAAE0G,oBACzE1G,IAEToH,EAAQ3G,aAAe2G,EAAQ3H,MAAMzD,IAAI,SAAAgE,GAAC,OAAIA,EAAEF,MAAM9D,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAGC,GAClF,OAAOD,EAAKC,GACX,KAAIF,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAGC,KACtBmH,EAAQ3G,aACX,OAAO,EAAK8C,SAAS,CAAErI,mBAAmB,EAAOlB,YAAY,EAAMsC,MAAO,oBAE5E,EAAKiH,SAAS,CAAEnE,OAAQ,CAACgI,GAAUtE,SAAS,EAAM5H,mBAAmB,S,oCAK5D,IAAD,OAEZ,OADAuI,KAAKF,SAAS,CAAET,SAAS,IAClBW,KAAKoE,aACTvF,KAAK,SAAAgD,GACJ,OAAQA,EAAQ/H,MACd,IAAK,OAEH,OADA,EAAKgG,SAAS,CAAErI,mBAAmB,IAC5B,EAAKoM,gBAAgBhC,EAAQb,UAEtC,IAAK,WACH,OAAO,EAAKqD,gBAAgBxC,EAAQb,UAEtC,IAAK,OAEH,OADA,EAAKlB,SAAS,CAAErI,mBAAmB,EAAMF,gBAAiB,CAAC,CAAE,KAAQ,gBAAiBoB,OAAQ,MACvF,EAAKwL,gBAAgBtC,EAAQb,UAEtC,QACE,OAAOV,IAAQE,OAAO,IAAImB,MAAM,qBAGrC2C,MAAM,SAAAC,GACL,EAAKzE,SAAS,CAAEvJ,YAAY,EAAMsC,MAAO0L,EAAIC,c,mCAIrC,IAAD,OACLC,EAAK,IAAItE,IAASuE,YAClBrI,EAAQ,GACR2E,EAAW,GAuBjB,OArBAhB,KAAKZ,MAAMzD,OAAOsG,QAAQ,SAAApG,GACT,YAAXA,EAAE/B,KACJ+B,EAAEG,MAAMiG,QAAQ,SAAA1F,GACdA,EAAEF,MAAM4F,QAAQ,SAAA0C,GACVA,EAAKxO,UAAYoG,EAAEE,KAAKC,WAAWI,kBAAkBF,YAAc+H,EAAKxO,UAAYoG,EAAEE,KAAKC,WAAWC,YAAYC,WACpHoE,EAASmB,KAAK5F,EAAEE,KAAKC,WAAWE,YACvB+H,EAAKxO,UAAYoG,EAAEqG,OAAOlG,WAAWI,kBAAkBF,YAAc+H,EAAKxO,UAAYoG,EAAEqG,OAAOlG,WAAWC,YAAYC,YAC/HoE,EAASmB,KAAK5F,EAAEqG,OAAOlG,WAAWE,YAEpCP,EAAM8F,KAAKwC,QAIf9I,EAAEQ,MAAM4F,QAAQ,SAAA0C,GAAI,OAAItI,EAAM8F,KAAKwC,KACnC3D,EAASmB,KAAKtG,EAAEY,KAAKG,eAGzB6H,EAAGG,KAAKvI,GACRoI,EAAGI,GAAG7E,KAAKZ,MAAM7D,WAAY4E,IAAS2E,KAAKC,QAAQ1I,EAAM9D,IAAI,SAAAC,GAAC,OAAIA,EAAEpC,SAAQkG,OAAO,SAACC,EAAEC,GAAH,OAASD,EAAGC,KAAIwI,aAnBvF,KAoBZP,EAAGQ,IApBS,KAqBZjE,EAASiB,QAAQ,SAAAiD,GAAC,OAAIT,EAAGU,KAAKD,EAAEtI,cDnTA,SAACwI,GACnC,IAAIC,EAAO7H,KAAKC,UAAU,CAAE,MAAS2H,IACrC,OAAOxG,MAAM,wCAAyC,CACpD0G,OAAQ,OACRC,QAAU,CACR,eAAgB,mBAChB,OAAU,oBAEZvH,KAAMqH,IAELxG,KAAK,SAAAC,GAAG,OAAIA,EAAIlD,SC0SV4J,CAAqBf,EAAGgB,aAAa5G,KAAK,SAAAe,GAC/C,IAAMnB,EAAOmB,EAAKnB,KAClB,EAAKqB,SAAS,CAAErB,OAAMa,WAAW,EAAMD,SAAS,EAAO/I,eAAe,MAEvEgO,MAAM,SAAAC,GACL,EAAKzE,SAAS,CAAEvJ,YAAY,EAAMsC,MAAO0L,EAAIC,c,8BAK/CxE,KAAKF,SAAS,CACZhH,IAAK,GACLyC,WAAY,GACZF,cAAc,EACdM,OAAQ,GACR5C,eAAgB,4BAChBsG,SAAS,EACT/I,eAAe,EACfC,YAAY,EACZkB,mBAAmB,EACnBoB,MAAO,KACP0G,gBAAgB,EAChBhI,gBAAiBwH,EAAWxG,IAAI,SAAAC,GAC9B,MAAO,CAAEE,KAAMF,EAAEE,KAAMC,OAAQ,S,+BAK3B,IAAD,OACP,OACE,yBAAKY,UAAU,OACb,kBAAC,EAAD,CACEpD,QAAS6J,KAAKZ,MAAM7D,WACpBnF,OAAQ4J,KAAKZ,MAAMzD,OAAO8E,OAAST,KAAKxE,WAAWwE,KAAKZ,MAAMzD,OAAOpD,IAAI,SAAAC,GAAC,OAAIA,EAAEwE,eAAcV,OAAO,SAACC,EAAEC,GAAH,OAASD,EAAGC,KAAM,EACvHnG,aAAc,kBAAM,EAAKyJ,SAAS,CAAEvE,WAAY,GAAIjF,eAAe,KACnEA,cAAe0J,KAAKvE,WACpBlF,WAAYyJ,KAAKZ,MAAM9I,gBAEzB,kBAAC,EAAD,CACEC,WAAYyJ,KAAKZ,MAAM7I,WACvBsC,MAAOmH,KAAKZ,MAAMvG,MAClBD,YAAa,kBAAM,EAAKkH,SAAS,CAAEvJ,YAAY,OAEjD,kBAAC,EAAD,CAAiBiB,SAAUwI,KAAKZ,MAAMK,UAAWnI,WAAY,kBAAM,EAAKwI,SAAS,CAAErI,mBAAmB,KAASF,gBAAiByI,KAAKZ,MAAM7H,gBAAiBE,kBAAmBuI,KAAKZ,MAAM3H,oBAC1L,4BAAQ8B,UAAU,cAChB,yCACA,yBAAK5B,MAAO,CAAE+N,aAAc,OAAQC,OAAQ,UAAWC,WAAY,QAAUzO,QAAS,kBAAM,EAAK2I,SAAS,CAAExE,YAAwC,QAA3B,EAAK8D,MAAM9D,YAAwB,MAAQ,UAClK,qCAAW0E,KAAKZ,MAAM9D,eAG1B,yBAAK/B,UAAU,YACXyG,KAAKZ,MAAME,WACX,kBAACuG,EAAD,CAAWpH,KAAMuB,KAAKZ,MAAMX,QAE3BuB,KAAKZ,MAAME,WACZ,kBAACwG,EAAD,CACEtO,SAAUwI,KAAKZ,MAAM5H,SACrByB,eAAgB,SAAAiH,GAAC,OAAI,EAAKJ,SAAS,CAAEtI,SAAU0I,EAAEnC,OAAOpE,MAAO8F,UAAWS,EAAEnC,OAAOpE,SACnFb,IAAKkH,KAAKZ,MAAMtG,IAChBC,eAAgBiH,KAAKZ,MAAMrG,eAC3BI,UAAW,SAAA+G,GAAC,OAAI,EAAKJ,SAAS,CAAEhH,IAAKoH,EAAEnC,OAAOpE,SAC9CT,qBAAsB,SAAAgH,GAAC,OAAI,EAAKJ,SAAS,CAAE/G,eAAgBmH,EAAEnC,OAAOpE,SACpEX,YAAagH,KAAKhH,cAIpBgH,KAAKZ,MAAMC,SACX,kBAAC0G,EAAD,CACE1K,aAAc2E,KAAKZ,MAAM/D,aACzBC,YAAa0E,KAAKZ,MAAM9D,YACxBE,WAAY,SAAAwK,GAAG,OAAI,EAAKxK,WAAWwK,IACnCzK,WAAYyE,KAAKZ,MAAM7D,WACvBE,WAAY,kBAAM,EAAKqE,SAAS,CAAExJ,eAAe,KACjDoF,cAAesE,KAAKtE,cACpBC,OAAQqE,KAAKZ,MAAMzD,UAIzB,4BAAQpC,UAAU,oB,GAlYR0M,aCJEC,QACW,cAA7BjJ,OAAOkJ,SAASC,UAEe,UAA7BnJ,OAAOkJ,SAASC,UAEhBnJ,OAAOkJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS7I,SAAS8I,eAAe,SD2H3C,kBAAmBtJ,WACrBA,UAAUuJ,cAAcC,MAAM7H,KAAK,SAAA8H,GACjCA,EAAaC,iB","file":"static/js/main.17760d84.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\n\nexport default function ({ address, amount, cancelDialog, confirmDialog, dialogOpen }) {\n  return (\n    <Dialog\n      open={dialogOpen}\n      onClose={cancelDialog}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Confirm</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you wish to send ALL DigiByte (<b>{amount}DGB</b>) from this seed to <b>{address}</b>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancelDialog} color=\"primary\" autoFocus>\n          Cancel\n        </Button>\n        <Button onClick={confirmDialog} color=\"primary\" autoFocus>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog> \n  );\n}","import React from 'react';\nimport {\n  Modal,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\n\n\nexport default function ({ closeModal, derivitorStatus, gapLimit, progressModalOpen }) {\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={progressModalOpen}\n      onClose={closeModal}\n    >\n      <div style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)', position: 'relative', background: 'white', width: '95vh' }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Wallet\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            { derivitorStatus.map(i => {\n              return (\n                <TableRow key={i.name}>\n                  <TableCell>\n                    {i.name}\n                  </TableCell>\n                  <TableCell>\n                    [{i.status}/{gapLimit}]\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    </Modal>\n  );\n}","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\nexport default function ({ closeDialog, dialogOpen, error }) {\n  return (\n    <Dialog\n      open={dialogOpen}\n      onClose={closeDialog}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Error:\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {error}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDialog} color=\"primary\" autoFocus>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog> \n  );\n}","import React from 'react';\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  Input,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nexport default function ({ wif, gapLimit, selectedServer, startSearch, updateGapLimit, updateSelectedServer, updateWif }) {\n  return (\n    <Card>\n    <CardContent>\n      <Typography className=\"card-title\" color=\"textPrimary\" gutterBottom variant=\"h5\">\n        Locating Funds\n      </Typography>\n      <p>This app needs your private information in order to find and move your funds. It is safe to put your information here because it is not recorded or transmitted from your machine. Also when you are done you will have moved the funds to a new wallet so the information will not be helpful to hackers.</p>\n      <form className=\"uploadForm\">\n        <TextField\n          value={wif}\n          onChange={updateWif}\n          id=\"outlined-email-input\"\n          label=\"Recovery phrase (mnemonic) or File/Text backup\"\n          className=\"textField\"\n          type=\"text\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          multiline\n          rowsMax=\"4\" \n          rows=\"4\"\n        />\n        <div>\n          <input\n            accept=\"image/*\"\n            className=\"uploadInput\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" component=\"span\" className=\"uploadButton\">\n            Or Upload File\n            </Button>\n          </label>\n        </div>\n        <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between', margin: '5px' }}>\n          <FormControl className=\"formControl\" style={{ flexBasis: '80%' }}>\n            <InputLabel shrink htmlFor=\"server-label-placeholder\">\n              Server\n            </InputLabel>\n            <Select\n              value={selectedServer}\n              onChange={updateSelectedServer}\n              input={<Input name=\"server\" fullWidth id=\"server-label-placeholder\" />}\n              displayEmpty\n              fullWidth\n              name=\"Server\"\n            >\n              <MenuItem value={'https://digiexplorer.info'}>Digiexplorer.info</MenuItem>\n              <MenuItem value={'https://explorer-1.us.digibyteservers.io'}>explorer-1.us.digibyteservers.io</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className=\"formControl\" style={{ flexBasis: '15%' }}>\n            <InputLabel shrink htmlFor=\"gaplimit-label-placeholder\">\n              Gap Limit\n            </InputLabel>\n            <Select\n              value={gapLimit}\n              onChange={updateGapLimit}\n              input={<Input name=\"gaplimit\" id=\"gaplimit-label-placeholder\" />}\n              displayEmpty\n              name=\"Gap Limit\"\n            >\n              <MenuItem value={20}>20</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </form>\n      <Button variant=\"contained\" color=\"primary\" className=\"submitButton\" onClick={startSearch}>\n        Recover My Funds\n      </Button>\n    </CardContent>\n  </Card>    \n  );\n}","export default {\n  exportButton: {\n    marginTop: '0px',\n    flexBasis: '10%'\n  }\n}","import React from 'react';\nimport {\n  Button,\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nimport style from './style';\n\nexport default function ({ addressError, currentUnit, dgbAddress, getBalance, sendBackup, updateAddress, wallet }) {\n  const exportWallet = () => {\n    const filename = \"export.json\";\n    const contentType = \"application/json;charset=utf-8;\";\n    const json = wallet.map(w => {\n      const obj = {\n        name: w.name\n      };\n      if (w.type !== 'privKey') {\n        obj.funds = w.addrs.filter(addr => addr.hasBalance).map(addr => {\n          return {\n            balance: addr.utxos.filter(i => i.amount).map(i => i.amount).reduce((a, b) => { return a += b; }, 0),\n            address: addr.main.privateKey.toAddress().toString(),\n            legacyAddress: addr.main.privateKey.toLegacyAddress().toString(),\n            privateKey: addr.main.privateKey.toWIF()\n          };\n        });\n      } else {\n        obj.name = \"PrivateKey\";\n        obj.funds = {\n          balance: w.totalBalance,\n          address: w.main.toAddress().toString(),\n          legacyAddress: w.main.toLegacyAddress().toString(),\n          privateKey: w.main.toWIF()\n        }\n      }\n      return obj;\n    });\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(json, null, 2)))], { type: contentType });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement('a');\n      a.download = filename;\n      a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(json, null, 2));\n      a.target = '_blank';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  return (\n    <Card style={{ marginTop: '25px' }}>\n    <CardContent>\n      <div style={{ display: 'flex' }}>\n        <Typography className=\"card-title\" color=\"textPrimary\" gutterBottom variant=\"h5\" style={{ flexBasis: '90%' }}>\n          Funds Found!\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" style={style.exportButton} onClick={exportWallet}>\n          Export\n        </Button>\n      </div>\n      <p>We found a total of <b>{ getBalance(wallet.map(i => i.totalBalance).reduce((a,b) => a+=b)) } {currentUnit}</b>. If your balance below looks correct then you may enter a new DigiByte address and we will send you the funds.</p>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Type\n              </TableCell>\n              <TableCell>\n                Address\n              </TableCell>\n              <TableCell>\n                Amount\n              </TableCell>\n              <TableCell>\n                Wallet\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            { wallet.filter(i => i.totalBalance).map((i, iterator) => {\n              if (i.type !== 'privKey') {\n                return i.addrs.filter(o => o.hasBalance).map((o, idx) => {\n                  return (\n                    <TableRow key={idx}>\n                      <TableCell>\n                        Input\n                      </TableCell>\n                      <TableCell>\n                        {o.main.privateKey.toLegacyAddress().toString()}\n                      </TableCell>\n                      <TableCell>\n                        {getBalance(o.balance)} {currentUnit}\n                      </TableCell>\n                      <TableCell>\n                        {i.name}\n                      </TableCell>\n                    </TableRow>\n                  );\n                });\n              } else if (i.type === 'privKey') {\n                return i.utxos.map((o, idx) => {\n                  return (\n                    <TableRow key={idx}>\n                      <TableCell>\n                        Input\n                      </TableCell>\n                      <TableCell>\n                        {o.address}\n                      </TableCell>\n                      <TableCell>\n                        {getBalance(o.amount)} {currentUnit}\n                      </TableCell>\n                      <TableCell>\n                        Private Key\n                      </TableCell>\n                    </TableRow>\n                  );                            \n                })\n              } else {\n                return (<TableRow key={iterator}/>);\n              }\n            })}\n          </TableBody>\n        </Table>\n        <TextField\n          required\n          fullWidth\n          error={addressError}\n          onChange={updateAddress}\n          label=\"Enter DigiByte Address\"\n          value={dgbAddress}\n          margin=\"normal\"\n        />\n      <Button variant=\"contained\" color=\"primary\" className=\"submitButton\" onClick={sendBackup} disabled={addressError}>\n        Send DigiByte to Address\n      </Button>\n    </CardContent>\n  </Card>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n} from '@material-ui/core';\n\nexport default function ({ txid }){\n  return (\n    <Card>\n      <CardContent>\n        <Typography className=\"card-title\" color=\"textPrimary\" gutterBottom variant=\"h5\">\n          Transaction Sent!\n        </Typography>\n        <h4>TXID: <a href={`https://digiexplorer.info/tx/${txid}`}>{txid}</a></h4>\n      </CardContent>\n    </Card>\n  );\n}","import Mnemonic from 'digibytejs-mnemonic';\n\nexport const BITCOIN_SEED = 'Bitcoin seed';\nexport const DIGIBYTE_SEED = 'DigiByte seed';\nexport const GAP_ADDRESSES_LIMIT = 20;\n\nexport const fetchUtxos = (addr) => {\n  return fetch(`https://digiexplorer.info/api/addr/${addr}/utxo`)\n    .then(res => res.json());\n}\n\nexport const fetchRates = () => {\n  return fetch(`https://digibyte.io/rates.php`)\n    .then(res => res.json());\n}\n\nexport const broadcastTransaction = (rawTx) => {\n  var data = JSON.stringify({ \"rawtx\": rawTx });\n  return fetch(`https://digiexplorer.info/api/tx/send`, {\n    method: 'POST',\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: data\n  })\n    .then(res => res.json());\n}\n\nexport const derivitors = [{\n  path: `m/0`,\n  secret: DIGIBYTE_SEED,\n  name: 'Core Mobile',\n  addrs: []\n}, {\n  path: `m/44'/0'/0'`,\n  secret: BITCOIN_SEED,\n  name: 'DigiByte Go',\n  addrs: []\n}, {\n  path: `m/44'/3'/0'`,\n  secret: BITCOIN_SEED,\n  name: 'BIP44 Doge Wallet',\n  addrs: []\n}, {\n  path: `m/44'/20'/0'`,\n  secret: BITCOIN_SEED,\n  name: 'BIP44 Wallets',\n  addrs: []\n}];\n\nexport function isSeed(privateKeys) {\n  if ((privateKeys.length % 3 === 0) && (privateKeys.length > 11) && (privateKeys.length < 25)) {\n    if (privateKeys[0].length<20) {\n      if(Mnemonic.isValid(privateKeys.join(' '))) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n","import React, { Component } from 'react';\nimport DigiByte from 'digibyte';\nimport Mnemonic from 'digibytejs-mnemonic';\nimport bip38 from 'bip38';\nimport Promise from 'bluebird';\n\nimport ConfirmDialog from './components/Dialogs/confirmDialog';\nimport DerivitorStatus from './components/Modals/derivitorStatus';\nimport ErrorDialog from './components/Dialogs/errorDialog';\nimport StepOne from './components/StepOne';\nimport StepTwo from './components/StepTwo';\nimport StepThree from './components/StepThree';\n\nimport { broadcastTransaction, derivitors, GAP_ADDRESSES_LIMIT, fetchRates, fetchUtxos, isSeed } from './utils';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      gapLimit: GAP_ADDRESSES_LIMIT,\n      currentUnit: 'DGB',\n      wif: '',\n      txid: null,\n      dgbAddress: '',\n      addressError: true,\n      wallet: [],\n      selectedServer: 'https://digiexplorer.info',\n      stepTwo: false,\n      stepThree: false,\n      confirmDialog: false,\n      dialogOpen: false,\n      progressModalOpen: false,\n      error: null,\n      passwordDialog: false,\n      derivitorStatus: derivitors.map(i => {\n        return { name: i.name, status: 0};\n      }),\n      usdRate: 0\n    }\n    this.state.gapStatus = this.state.gapLimit;\n    this.startSearch = this.startSearch.bind(this);\n    this.sendBackup = this.sendBackup.bind(this);\n    this.updateAddress = this.updateAddress.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    fetchRates().then(resp => {\n      const usdRate = resp.filter(i => i.code === 'USD')[0];\n      this.setState({ usdRate: usdRate.rate });\n    })\n  }\n\n  getBalance(balance) {\n    if (this.state.currentUnit === 'USD') {\n      return (balance * this.state.usdRate).toFixed(2);\n    }\n    return balance;\n  }\n\n  updateAddress(e) {\n    if (DigiByte.Address.isValid(e.target.value)) {\n      this.setState({ addressError: false });\n    } else {\n      this.setState({ addressError: true });\n    }\n    this.setState({ dgbAddress: e.target.value });\n  }\n\n  checkInput() {\n    return new Promise((resolve, reject) => {\n      const { wif } = this.state;\n      if (!wif.length) {\n        return resolve(this.setState({ dialogOpen: true, error: 'No Input Provided!' }));\n      }\n      const privateKeys = wif.replace(/\\s/g,\",\").split(\",\");\n      if (isSeed(privateKeys)) {\n        return resolve({ privKeys: privateKeys, type: 'seed' });\n      }\n  \n      if ((privateKeys.length === 1) && (privateKeys[0].substr(0,4) === \"xprv\")) {\n        return resolve({ privKeys: privateKeys, type: 'xPrv' });\n      };\n  \n      const testPrivateKey = wif.split(\",\").map(privKey => {\n        return new Promise((resolve2, reject2) => {\n          let splitKey = privKey.split(':');\n          if (splitKey[0].substr(0,2) === \"6P\") {\n            const res = bip38.decrypt(splitKey[0], splitKey[1]);\n            var newPriv = DigiByte.PrivateKey(res.privateKey).toWIF();\n            if(!DigiByte.PrivateKey.isValid(newPriv)) {\n              return reject(new Error(`Invalid Private Key: ${newPriv}`));\n            } else {\n              resolve2(newPriv);\n            }\n          } else {\n            if(!DigiByte.PrivateKey.isValid(privKey)) {\n              return reject(new Error(`Invalid Private Key: ${privKey}`));\n            } else {\n              resolve2(privKey);\n            }\n          }\n        });\n      });\n      return Promise.all(testPrivateKey).then(results => resolve({ privKeys: results, type: 'privKeys' }));\n    });\n  }\n\n  updateDerivitorStatus(name, status) {\n    return new Promise(resolve => {\n      const d = this.state.derivitorStatus.map(i => {\n        if (i.name === name) {\n          i.status = (status + 1);\n        }\n        return i;\n      });\n      this.setState({ derivitorStatus: d }, resolve());\n    });\n  }\n\n  getNextAddress(seed) {\n    seed = seed.join(\" \");\n    const promises = [];\n    derivitors.filter(w => w.addrs.filter(i => !i.hasBalance).length < this.state.gapLimit).forEach(derivitor => {\n      const getNextKey = () => {\n        const len = derivitor.addrs.length;\n        const mnemonic = new Mnemonic(seed);\n        const hdKey = DigiByte.HDPrivateKey.fromSeed(mnemonic.toSeed(), 'livenet', derivitor.secret);\n        const addr = hdKey.derive(`${derivitor.path}/${derivitor.addrs.length}/0`);\n        const changeAddr =  hdKey.derive(`${derivitor.path}/${derivitor.addrs.length}/1`);\n        derivitor.addrs[len] = { main: addr, change: changeAddr };\n        return Promise.all([\n          fetchUtxos(addr.privateKey.toAddress().toString()),\n          fetchUtxos(addr.privateKey.toLegacyAddress().toString()),\n          fetchUtxos(changeAddr.privateKey.toAddress().toString()),\n          fetchUtxos(changeAddr.privateKey.toLegacyAddress().toString()),\n        ])\n        .spread((mainUtxos, mainLegacyUtxos, changeUtxos, changeLegacyUtxos) => {\n          if(mainUtxos.length || mainLegacyUtxos.length || changeUtxos.length || changeLegacyUtxos.length) {\n            let newGap = this.state.gapStatus;\n            this.setState({ gapStatus: newGap += 1 });\n            derivitor.addrs[len].hasBalance = true; \n          }\n          derivitor.addrs[len].mainUtxos = mainUtxos;\n          derivitor.addrs[len].mainLegacyUtxos = mainLegacyUtxos;\n          derivitor.addrs[len].changeUtxos = changeUtxos;\n          derivitor.addrs[len].changeLegacyUtxos = changeLegacyUtxos;              \n          derivitor.addrs[len].mainBalance = mainUtxos.length ? mainUtxos.map(i => i.amount).reduce((a, b) =>  { return a += b }) : 0;\n          derivitor.addrs[len].mainLegacyBalance = mainLegacyUtxos.length ? mainLegacyUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n          derivitor.addrs[len].changeBalance = changeUtxos.length ? changeUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n          derivitor.addrs[len].changeLegacyBalance = changeLegacyUtxos.length ? changeLegacyUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n          derivitor.addrs[len].balance = (derivitor.addrs[len].changeLegacyBalance + derivitor.addrs[len].changeBalance + derivitor.addrs[len].mainLegacyBalance + derivitor.addrs[len].mainBalance);\n          return this.updateDerivitorStatus(derivitor.name, len);\n        })\n        .then(() => {\n          return derivitor;\n        });\n      }\n      promises.push(getNextKey());\n    });\n    return Promise.all(promises);\n  }\n\n  getDataFromSeed(seed, server) {\n    return new Promise((resolve, reject) => {\n      return this.getNextAddress(seed).then(wallets => {\n        if(wallets.some(i => i.addrs.length < this.state.gapLimit) || wallets.filter(w => w.addrs.filter(i => !i.hasBalance).length < this.state.gapLimit).length) {\n          return this.getDataFromSeed(seed);\n        }\n        return wallets;\n      })\n      .then(wallet => {\n        wallet.forEach(w => {\n          w.type = 'seed';\n          w.addrs.map(a => {\n            a.utxos = [].concat.apply([], [a.mainUtxos, a.mainLegacyUtxos, a.changeUtxos, a.changeLegacyUtxos]);\n            return a;\n          });\n          w.totalBalance = w.addrs.map(a => a.utxos.map(i => i.amount).reduce((a, b) => {\n            return a += b;\n          }, 0)).reduce((a, b) => a+=b);\n        });\n        const hasBalance = wallet.filter(w => w.totalBalance).length;\n        if (!hasBalance) {\n          return this.setState({ progressModalOpen: false, dialogOpen: true, error: 'No Funds Found!' });\n        }\n        this.setState({ wallet, stepTwo: true, progressModalOpen: false });\n      });\n    });\n  }\n\n  getDataFromKeys(privKeys) {\n    return Promise.map(privKeys, key => {\n      const o = { main: new DigiByte.PrivateKey(key) };\n      return Promise.all([\n        fetchUtxos(o.main.toAddress().toString()),\n        fetchUtxos(o.main.toLegacyAddress().toString())\n      ])\n        .spread((mainUtxos, legacyUtxos) => {\n          o.utxos = [].concat(mainUtxos, legacyUtxos);\n          o.hasBalance = o.utxos.some(i => i.amount);\n          o.totalBalance = o.utxos.map(i => i.amount).reduce((a, b) => a+=b);\n          o.type = 'privKey';\n          return o;\n        });\n    })\n    .then(wallet => {\n      return this.setState({ wallet, stepTwo: true });\n    });\n  }\n\n  getNextXprvAddress(xprv, derivitor) {\n    const path = `m/0'/`;\n    const len = derivitor.addrs.length;\n    const hdKey = DigiByte.HDPrivateKey(xprv);\n    const addr = hdKey.derive(`${path}0'/${len}'`);\n    const changeAddr =  hdKey.derive(`${path}1'/${len}`);\n    derivitor.addrs[len] = { main: addr, change: changeAddr };\n    return Promise.all([\n      fetchUtxos(addr.privateKey.toAddress().toString()),\n      fetchUtxos(addr.privateKey.toLegacyAddress().toString()),\n      fetchUtxos(changeAddr.privateKey.toAddress().toString()),\n      fetchUtxos(changeAddr.privateKey.toLegacyAddress().toString()),\n    ])\n    .spread((mainUtxos, mainLegacyUtxos, changeUtxos, changeLegacyUtxos) => {\n      if(mainUtxos.length || mainLegacyUtxos.length || changeUtxos.length || changeLegacyUtxos.length) {\n        let newGap = this.state.gapStatus;\n        this.setState({ gapStatus: newGap += 1 });\n        derivitor.addrs[len].hasBalance = true;\n      }\n      derivitor.addrs[len].mainUtxos = mainUtxos;\n      derivitor.addrs[len].mainLegacyUtxos = mainLegacyUtxos;\n      derivitor.addrs[len].changeUtxos = changeUtxos;\n      derivitor.addrs[len].changeLegacyUtxos = changeLegacyUtxos;              \n      derivitor.addrs[len].mainBalance = mainUtxos.length ? mainUtxos.map(i => i.amount).reduce((a, b) =>  { return a += b }) : 0;\n      derivitor.addrs[len].mainLegacyBalance = mainLegacyUtxos.length ? mainLegacyUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n      derivitor.addrs[len].changeBalance = changeUtxos.length ? changeUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n      derivitor.addrs[len].changeLegacyBalance = changeLegacyUtxos.length ? changeLegacyUtxos.map(i => i.amount).reduce((a, b) => { return a += b }) : 0;\n      derivitor.addrs[len].balance = (derivitor.addrs[len].changeLegacyBalance + derivitor.addrs[len].changeBalance + derivitor.addrs[len].mainLegacyBalance + derivitor.addrs[len].mainBalance);\n      return this.updateDerivitorStatus(derivitor.name, len);\n    })\n    .then(() => {\n      return derivitor;\n    });\n  }\n\n  getDataFromXprv(xprv, wallet) {\n    const derivitor = wallet ? wallet : { addrs: [], name: 'DigiByte Core' };\n    return this.getNextXprvAddress(xprv[0], derivitor).then(wallets => {\n      if(wallets.addrs.length < this.state.gapLimit || wallets.addrs.filter(i => !i.hasBalance).length < this.state.gapLimit) {\n        return this.getDataFromXprv(xprv, wallets);\n      }\n      return wallets;\n    })\n    .then(wallets => {\n      if(wallets) {\n        wallets.type = 'Core';\n        wallets.addrs.map(a => {\n          a.utxos = [].concat.apply([], [a.mainUtxos, a.mainLegacyUtxos, a.changeUtxos, a.changeLegacyUtxos]);\n          return a;\n        });\n        wallets.totalBalance = wallets.addrs.map(a => a.utxos.map(i => i.amount).reduce((a, b) => {\n          return a += b;\n        }, 0)).reduce((a, b) => a+=b);\n        if (!wallets.totalBalance) {\n          return this.setState({ progressModalOpen: false, dialogOpen: true, error: 'No Funds Found!' });\n        }\n        this.setState({ wallet: [wallets], stepTwo: true, progressModalOpen: false });\n      }\n    });\n  }\n\n  startSearch() {\n    this.setState({ stepTwo: false });\n    return this.checkInput()\n      .then(results => {\n        switch (results.type) {\n          case 'seed':\n            this.setState({ progressModalOpen: true });\n            return this.getDataFromSeed(results.privKeys);\n\n          case 'privKeys':\n            return this.getDataFromKeys(results.privKeys);\n\n          case 'xPrv':\n            this.setState({ progressModalOpen: true, derivitorStatus: [{ 'name': 'DigiByte Core', status: 0}] });\n            return this.getDataFromXprv(results.privKeys);\n\n          default: \n            return Promise.reject(new Error('Unknown type!'));\n        };\n      })\n      .catch(err => {\n        this.setState({ dialogOpen: true, error: err.message })\n      });\n  }\n\n  sendBackup() {\n    const tx = new DigiByte.Transaction();\n    const utxos = [];\n    const privKeys = [];\n    const fee = 1000;\n    this.state.wallet.forEach(w => {\n      if (w.type !== 'privKey') {\n        w.addrs.forEach(a => {\n          a.utxos.forEach(utxo => {\n            if (utxo.address === a.main.privateKey.toLegacyAddress().toString() || utxo.address === a.main.privateKey.toAddress().toString()) {\n              privKeys.push(a.main.privateKey.toString());\n            } else if (utxo.address === a.change.privateKey.toLegacyAddress().toString() || utxo.address === a.change.privateKey.toAddress().toString()) {\n              privKeys.push(a.change.privateKey.toString());\n            }\n            utxos.push(utxo)\n          });\n        });\n      } else {\n        w.utxos.forEach(utxo => utxos.push(utxo));\n        privKeys.push(w.main.toString());       \n      }\n    });\n    tx.from(utxos);\n    tx.to(this.state.dgbAddress, DigiByte.Unit.fromDGB(utxos.map(i => i.amount).reduce((a,b) => a+=b)).toSatoshis() - fee);\n    tx.fee(fee);\n    privKeys.forEach(p => tx.sign(p.toString()));\n    return broadcastTransaction(tx.serialize()).then(resp => {\n      const txid = resp.txid;\n      this.setState({ txid, stepThree: true, stepTwo: false, confirmDialog: false });\n    })\n    .catch(err => {\n      this.setState({ dialogOpen: true, error: err.message })\n    })\n  }\n  \n  reset() {\n    this.setState({\n      wif: '',\n      dgbAddress: '',\n      addressError: true,\n      wallet: [],\n      selectedServer: 'https://digiexplorer.info',\n      stepTwo: false,\n      confirmDialog: false,\n      dialogOpen: false,\n      progressModalOpen: false,\n      error: null,\n      passwordDialog: false,\n      derivitorStatus: derivitors.map(i => {\n        return { name: i.name, status: 0};\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ConfirmDialog\n          address={this.state.dgbAddress}\n          amount={this.state.wallet.length ? this.getBalance(this.state.wallet.map(i => i.totalBalance).reduce((a,b) => a+=b)) : 0}\n          cancelDialog={() => this.setState({ dgbAddress: '', confirmDialog: false })}\n          confirmDialog={this.sendBackup}\n          dialogOpen={this.state.confirmDialog}\n        />\n        <ErrorDialog\n          dialogOpen={this.state.dialogOpen}\n          error={this.state.error}\n          closeDialog={() => this.setState({ dialogOpen: false })}\n        />\n        <DerivitorStatus gapLimit={this.state.gapStatus} closeModal={() => this.setState({ progressModalOpen: false})} derivitorStatus={this.state.derivitorStatus} progressModalOpen={this.state.progressModalOpen} />\n        <header className=\"App-header\">\n          <h1>DigiSweep</h1>\n          <div style={{ paddingRight: '25px', cursor: 'pointer', userSelect: 'none' }} onClick={() => this.setState({ currentUnit: this.state.currentUnit === 'DGB' ? 'USD' : 'DGB' })}>            \n            <h2>Unit: {this.state.currentUnit}</h2>\n          </div>\n        </header>\n        <div className=\"App-body\">\n          { this.state.stepThree &&\n            <StepThree txid={this.state.txid} />\n          }\n          { !this.state.stepThree && \n            <StepOne\n              gapLimit={this.state.gapLimit}\n              updateGapLimit={e => this.setState({ gapLimit: e.target.value, gapStatus: e.target.value })}\n              wif={this.state.wif}\n              selectedServer={this.state.selectedServer}\n              updateWif={e => this.setState({ wif: e.target.value })}\n              updateSelectedServer={e => this.setState({ selectedServer: e.target.value })}\n              startSearch={this.startSearch}\n            />\n          }\n\n          { this.state.stepTwo &&\n            <StepTwo\n              addressError={this.state.addressError}\n              currentUnit={this.state.currentUnit}\n              getBalance={bal => this.getBalance(bal)}\n              dgbAddress={this.state.dgbAddress}\n              sendBackup={() => this.setState({ confirmDialog: true })}\n              updateAddress={this.updateAddress}\n              wallet={this.state.wallet}\n            />             \n          }\n        </div>\n        <footer className=\"App-footer\">\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}